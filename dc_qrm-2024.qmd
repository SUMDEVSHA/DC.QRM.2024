---
title: "QUANTITATIVE RISK MANAGEMENT"
subtitle: "datacamp"
format: html
editor: visual
---


```{r,warning=FALSE,message=FALSE}
library(qrmdata)
library(qrmtools)
library(xts)
library(zoo)
library(PerformanceAnalytics)
library(tidyverse)
```




## Exploring Market Risk-Factor Data
In this chapter, you will learn how to form return series, aggregate them over longer periods and plot them in different ways. You will look at examples using the qrmdata package.


#VEDIO 1

1. Welcome to the course!
00:00 - 00:09
Hello. My name is Alex McNeil, and I am going to take your through "An Introduction to Quantitative Risk Management".

2. About me
00:09 - 01:15
My background is in mathematical statistics, actuarial science, and quantitative finance. Together with my colleagues Ruediger Frey and Paul Embrechts, I am the author of the book "Quantitative Risk Management: Concepts, Techniques, and Tools", published by Princeton University Press. If you want the theoretical background to this course, I recommend you take a look. Together with my co-authors and with Marius Hofert, I have also created the website qrmtutorial(dot)org which provides complementary materials to the QRM book. In particular, there is a lot of R code there, which you might want to try after you've taken this course. Marius and I have two R packages which feature prominently in qrmtutorial. These are qrmdata, which is a large collection of financial datasets for students and researchers in QRM, and qrmtools, which is a set of useful functions. You'll use these packages in the course.

3. The objective of QRM
01:15 - 02:40
In QRM, the goal is to quantify the risk of a portfolio of risky assets. Measuring the risk is the first step towards managing the risk. In the book I wrote, we consider the typical portfolios of risky assets held by banks and insurance companies, and sometimes also their liabilities. But the ideas apply equally to the portfolio of a private investor, like you or me. Managing the risk can entail many things. For example, you might try to reduce the risk by selling assets, by acquiring new assets to increase the diversification of the portfolio, or by using so-called hedging strategies. For the banks and insurers, an important part of managing risk is making sure they have sufficient capital to withstand large losses on their portfolios and remain solvent. For this purpose, they compute measurements of the amounts that they could lose in periods of extreme market stress. A well-known example of one of these risk measures is Value-at-Risk. In this course, you will work up to calculating Value-at-Risk for portfolios. To begin with, it is important to consider where the risk in a portfolio comes from.

4. Risk factors
02:40 - 03:56
So think of a portfolio of risky assets. It might contain some stock index trackers, some individual stocks, some government bonds or treasuries, some corporate bonds. It might contain assets denominated in domestic currency and some denominated in foreign currencies. It might contain commodities, like gold. It might contain some derivative securities designed to hedge risk or speculate on price movements, such as equity options. The value of this portfolio at any point in time depends on the fluctuating values of many underlying quantities, which we call risk factors. Examples of risk factors are equity indexes, individual equity prices, foreign exchange rates, interest rates for different borrowing periods (in the case of bonds), and commodity prices. Let's load the QRMdata package and then the dataset SP500. This contains daily values of the well-known equity index based on 500 of the most important US stocks.

5. Analyzing risk factors with R
03:56 - 04:13
Using head and tail, the first few lines, and the last few lines of the data can be displayed. Note the dates of the first few values in 1950 and the last few values up to the end of 2015.

6. Plotting risk factors
04:13 - 04:28
Let's plot the index. You can see how it has generally gone up over time, but with some drawdowns such as around the 2008-2009 financial crisis.



##Exploring risk-factor time series: equity indexes.

In this exercise, you will look at an equity index and plot it for a particular range of dates. The data used in this exercise and in the rest of the course are contained in the package qrmdata. You also need the package xts to manipulate time series.

When the qrmdata library is attached, as it will be throughout the course, you can load a dataset with the data() command. For example, the command data("FTSE") loads the UK FTSE (Financial Times Stock Exchange) index, which you can then refer to as object FTSE.

If you want to extract the data from a certain date range, for example from April 1 to June 30, 2000, you can create a new object using the command ftse00 <- FTSE["2000-04-01/2000-06-30"].

From now onwards, the xts package will also already be loaded into your workspace.


#Instructions


Load the Dow Jones index "DJ" from qrmdata.
Show the first and last few lines of the DJ index with head() and tail().
Plot the DJ index using plot().
Extract the DJ index for the crisis period 2008-2009 and assign to object dj0809.
Plot the dj0809 using the same plotting function as above.



```{r}
data("DJ")
head(DJ)
tail(DJ)
plot(DJ)
dj0809 <-DJ["2008/2009"]
plot(dj0809)
```


## Exploring risk-factor time series: individual equities
For some risk management applications, it is sufficient to model equity risk by looking at indexes. If you want a more detailed model of the risk in a portfolio of equities, you can drill down to the level of individual share prices.

In the previous chapter, you used DJ["2008/2009"] to extract the Dow Jones data from certain rows of an xts object by specifying a date range index. To also extract data from particular columns, you can add a column identifier, like a string name or numeric index, in the brackets following a comma. To select multiple columns, include these column identifiers in a vector. This [rows, columns] format is consistent with indexing most other two dimensional objects in R.

data[index, colname]
data[index, c(col1index, col2index)]
The qrmdata package also includes data for certain constituents, or the stocks or companies part of a larger index. The Dow Jones constituents data are contained in "DJ_const". In this exercise, you will view the names of all its stocks, select the Apple and Goldman Sachs share prices, and plot them using the command plot.zoo() to display multiple time series.

# Instructions
100 XP
Load the DJ constituents data `DJ_const` from qrmdata.
Use names() to view the names in DJ_const and head() to display the first few rows.
Extract only the Apple ("AAPL") and Goldman Sachs ("GS") share prices for 2008-2009 and assign them to object stocks.
Plot stocks using plot.zoo().
  
  
  -1 is used for removing first col because its shown NA VALUE SO WE REMOVED 


```{r}
# Load DJ constituents data
data("DJ_const")
# Apply names() and head() to DJ_const
names(DJ_const)
head(DJ_const)
# Extract AAPL and GS in 2008-09 and assign to stocks
stocks <- DJ_const[("2008/2009"),c("AAPL","GS")]
# Plot stocks with plot.zoo()
plot.zoo(stocks)
```



```{r}
# Load exchange rate data
data("GBP_USD")
data("EUR_USD")

# Plot the two exchange rates
plot(GBP_USD)
plot(EUR_USD)

# Plot a USD_GBP exchange rate
plot(1/GBP_USD)
plot(1/EUR_USD)

# Merge the two exchange rates GBP_USD and EUR_USD
fx <- merge(GBP_USD, EUR_USD,1/GBP_USD,1/EUR_USD, all = TRUE)

# Extract 2010-15 data from fx and assign to fx0015
fx0015 <- fx["2010/2015"]

# Plot the exchange rates in fx0015
plot.zoo(fx0015)
```

## vedio 2 

#1. Risk-factor returns
00:00 - 00:09
In QRM, the aim is to model the fluctuations in key risk factors which affect the value of a portfolio.

2. Risk-factor returns
00:09 - 01:49
These fluctuations are called the risk-factor changes or risk-factor returns or simply returns. However, there are a few different ways of defining returns. Let (Z_t) be a time series containing the values of a risk factor at a time at a set of regularly-spaced times, which could represent days, weeks, months, etc. For illustration, let's suppose it is a daily series. Here are three different ways of defining risk-factor returns (X_t): In the first definition, the returns are the differences of the risk-factor values, known as simple returns. This is the simplest definition but not the most common. It tends to be used when the risk factors have very small values close to zero (like certain interest-rate series). The second definition is the easiest to interpret. The relative returns are the differences divided by the initial values. If you multiply the relative returns by one hundred, you get percentage changes. So if a stock has a relative return of point zero two, it gains 2% in value; if it has a relative return of minus point zero three, it falls 3% in value. In the third definition, the returns are the differences of the log-values of the risk factors; these are log-returns. This definition is, in fact, the most widely used. Here are a few of the reasons why log-returns are popular.

# 3. Properties of log-returns

01:49 - 03:19
If you build a model for the log-returns of a risk factor, you know that the risk-factor can never become negative. This is generally a desirable feature for risk factors that are prices and rates. However, some risk factors can become negative under unusual market conditions, an example being short-term interest rates. Log returns are, in fact, very close to relative returns for typical values. It can be shown with some algebra that log of Z_t minus log of Z_(t-1) can be approximated by Z_t minus Z_(t-1) divided by Z_(t-1) Finally, there are a couple of theoretical reasons for using log-returns: It is particularly easy to aggregate them to calculate longer-interval returns, such as weekly or monthly returns, as we will see later in this chapter. Also, there is a very famous model for prices known as the Black-Scholes-Merton model, or geometric Brownian motion (GBM). The model is widely used for pricing derivatives. If a price series follows GBM, then the log-returns will be normally distributed. That's all you really need to know about this model at this stage.

# 4. Log-returns in R

03:19 - 03:56
It's worth remarking, however, that you are going to find that log-returns generally aren't normally distributed in practice, at least for short time horizons. To calculate the log-returns of the S&P 500 index, you apply the functions log and diff in succession. Diff calculates differences. Here is some code to illustrate. Note that you get an NA in the first position when you apply these operations. It is best to remove the first value prior to working with the return series.

# 5. Log-returns in R (2)

03:56 - 04:26
Now let's plot the log-returns. You see, a fairly noisy series mostly oscillating between minus point zero five and plus point zero five, which can be approximately interpreted as 5% movements up and down. However, there are some very extreme values. The largest negative return corresponds to the famous stock market crash on Black Monday in 1987.



## Exercise
# Exploring return series
To analyze risk, the key task is to model the fluctuations in prices and rates over different time periods; these fluctuations are known as returns. To calculate the log-returns of the FTSE stock index and assign to ftse_x, apply the log() and diff() functions in succession:

> ftse_x <- diff(log(FTSE))
As you saw in the video, differencing in this way will always give a NA in the first position of the time series, which can then be removed with diff(log(FTSE))[-1]. However, you will not need to do this in the course unless it is specified in the instructions.

In this exercise, you will calculate and plot log-return series for the equity and FX risk factors that you have previously encountered. The datasets dj0809, djstocks, and GBP_USD have been pre-loaded into your workspace.

#  Instructions
100 XP
Instructions
100 XP
Compute the log-returns of the DJ index in dj0809 and assign to object dj0809_x.
Plot the return series dj0809_x.
Compute the log-returns of all share prices in djstocks and assign to djstocks_x.
Plot the share returns djstocks_x. Note that djstocks_x contains multiple time series.
Compute the log-returns of the GBP_USD exchange rate series and assign to erate_x.
Plot the return series erate_x.




```{r}
# Compute the log-returns of dj0809 and assign to dj0809_x
dj0809_x <- diff(log(dj0809))

# Plot the log-returns
plot(log(dj0809))

# Compute the log-returns of djstocks and assign to djstocks_x
djstocks <- DJ_const[("2008/2009"),c("AAPL","GS")]
djstocks_x <- diff(log(djstocks))

# Plot the two share returns
plot(djstocks_x)

# Compute the log-returns of GBP_USD and assign to erate_x
erate_x <- diff(log(GBP_USD))

# Plot the log-returns
plot(erate_x)
```














